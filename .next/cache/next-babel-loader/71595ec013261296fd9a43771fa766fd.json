{"ast":null,"code":"var _jsxFileName = \"D:\\\\identity-managment\\\\components\\\\Content.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Text, Link, Button, Select, Spinner, Row, Input, Image, useToasts, useModal } from '@geist-ui/react';\nimport makeStyles from './makeStyles';\nimport EventListItem from './EventListItem.js';\nimport SearchResultsModal from './modals/SearchResults';\nimport PortfolioCard from './PortfolioCard';\nimport Portfolio from './modals/Portfolio';\nimport Loader from './modals/Loader';\nimport { getLoginUser, getAllUsers, requestPortfolio, sharePortfolio, checkEmailExists, rejectPortfolioRequest } from '../lib/threadDb';\nimport * as Icons from 'react-feather';\nconst useStyles = makeStyles(ui => ({\n  root: {\n    backgroundColor: ui.background\n  },\n  content: {\n    width: ui.layout.pageWidthWithMargin,\n    maxWidth: '100%',\n    boxSizing: 'border-box',\n    margin: '0 auto',\n    padding: `calc(${ui.layout.gap} * 2) ${ui.layout.pageMargin} calc(${ui.layout.gap} * 4)`,\n    transform: 'translateY(-35px)'\n  },\n  invite: {\n    display: 'flex'\n  },\n  inviteHeading: {\n    marginBottom: 18,\n    fontSize: '14px !important'\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    minWidth: 1,\n    maxWidth: '100%',\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'stretch'\n  },\n  projects: {\n    width: '100%'\n  },\n  textRoot: {\n    borderBottom: `solid 1px ${ui.palette.accents_2}`,\n    padding: '10px 0px',\n    alignItems: 'center',\n    display: 'flex',\n    fontSize: 14\n  },\n  message: {\n    fontSize: '14px !important',\n    margin: 0,\n    flex: 1\n  },\n  activity: {\n    flex: 1\n  },\n  [`@media screen and (min-width: ${ui.layout.pageWidthWithMargin})`]: {\n    row: {\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    },\n    projects: {\n      width: 540,\n      maxWidth: '100%',\n      marginRight: 80\n    },\n    activityTitle: {\n      marginTop: '20 !important',\n      fontSize: '14px !important',\n      textAlign: 'start !important'\n    },\n    viewAll: {\n      marginBottom: '0 !important',\n      textAlign: 'start !important'\n    },\n    invite: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    }\n  },\n  viewAll: {\n    fontSize: 14,\n    fontWeight: 700,\n    marginBottom: ui.layout.gap,\n    textAlign: 'center'\n  },\n  activityTitle: {\n    fontWeight: 700,\n    marginTop: ui.layout.gap,\n    fontSize: 24,\n    textAlign: 'center'\n  },\n  btnAccept: {\n    marginRight: '8px'\n  }\n}));\n\nconst Content = ({\n  idx,\n  user,\n  userData\n}) => {\n  const {\n    0: caller,\n    1: setCaller\n  } = useState(null);\n  const {\n    0: userArray,\n    1: setUserArray\n  } = useState([{}]);\n  const {\n    0: requested,\n    1: setRequested\n  } = useState([]);\n  const {\n    0: requests,\n    1: setRequests\n  } = useState([]);\n  const {\n    0: sharedPortfolio,\n    1: setSharedPortfolio\n  } = useState([]);\n  const {\n    0: selectedPortfolio,\n    1: setSelectedPortfolio\n  } = useState({});\n  const {\n    0: portfolioModal,\n    1: setPortfolioModal\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: loaderData,\n    1: setLoaderData\n  } = useState({});\n  const {\n    0: searchUser,\n    1: setSearchUser\n  } = useState('');\n  const {\n    0: userEmail,\n    1: setUserEmail\n  } = useState('');\n  const {\n    0: reciverDetails,\n    1: setReciverDetails\n  } = useState(null);\n  const {\n    0: searchResults,\n    1: setSearchResults\n  } = useState(false);\n  const [, setToast] = useToasts();\n  console.log('SEARCHRESULTS', searchResults);\n  useEffect(() => {\n    async function load() {\n      if (idx && user === 2) {\n        setRequested(userData.requested);\n        setRequests(userData.requests);\n        setSharedPortfolio(userData.sharedData);\n        const user = JSON.parse(localStorage.getItem('USER'));\n        const {\n          userArray,\n          caller\n        } = await getAllUsers(user.did);\n        console.log('caller', caller);\n        setCaller(userData);\n        setUserArray(userArray);\n      }\n    }\n\n    load();\n  }, [idx, user]);\n\n  const onClickCard = portfolio => {\n    console.log(portfolio);\n    setSelectedPortfolio(portfolio);\n    setPortfolioModal(true);\n  };\n\n  const handleClick = async () => {\n    setLoaderData({\n      heading: 'Searching User',\n      content: 'Searching user'\n    });\n    setLoading(true);\n\n    if (searchUser !== caller.email) {\n      const {\n        status,\n        user\n      } = await checkEmailExists(searchUser);\n\n      if (!status) {\n        setLoading(false);\n        setSearchResults(true);\n        setUserEmail(user.name);\n        setReciverDetails(user);\n        console.log('User EMAILLLLL', userEmail);\n      } else {\n        setLoading(false);\n        setToast({\n          text: 'User not found, please check the Email ID',\n          type: 'warning'\n        });\n      }\n    } else {\n      setLoading(false);\n      setToast({\n        text: 'Please enter valid email',\n        type: 'warning'\n      });\n    }\n  };\n\n  const fetchUserDetails = async () => {\n    setLoaderData({\n      heading: 'Fetch portfolio',\n      content: 'Fetching portfolio'\n    });\n    setLoading(true);\n    const userData = await getLoginUser(idx.id);\n    setRequested(userData.requested);\n    setRequests(userData.requests);\n    setSharedPortfolio(userData.sharedData);\n    setLoading(false);\n  };\n\n  const handleAccept = async receiver => {\n    setLoading(true);\n    setLoaderData({\n      heading: 'Accept Portfolio Request',\n      content: 'Accepting portfolio request'\n    });\n    const docId = localStorage.getItem('docId');\n    const user = JSON.parse(localStorage.getItem('USER'));\n    const dec = await idx.ceramic.did.decryptDagJWE(user.aesKey);\n    const encKey = await idx.ceramic.did.createDagJWE(dec, [receiver.senderDid]);\n    await sharePortfolio(caller, receiver, docId, encKey, receiver.requestId);\n    setLoading(false);\n  };\n\n  const handleReject = async receiver => {\n    setLoading(true);\n    setLoaderData({\n      heading: \"Reject Portfolio Request\",\n      content: \"Rejecting portfolio request\"\n    });\n    await rejectPortfolioRequest(caller, receiver.requestId);\n    setLoading(false);\n  };\n\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Loader, {\n    loading: loading,\n    heading: loaderData.heading,\n    content: loaderData.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }), __jsx(SearchResultsModal, {\n    avatar: \"/assets/avatar.png\",\n    searchResults: searchResults,\n    setSearchResults: setSearchResults,\n    userEmail: userEmail,\n    reciverDetails: reciverDetails,\n    caller: caller,\n    requested: requested,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }), __jsx(Portfolio, {\n    state: portfolioModal,\n    idx: idx,\n    portfolio: selectedPortfolio,\n    setPortfolioModal: setPortfolioModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    h3: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"All portfolios\"), __jsx(Button // aria-label='Toggle Dark mode'\n  // className={classes.themeIcon}\n  , {\n    auto: true,\n    type: \"abort\",\n    onClick: fetchUserDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, __jsx(Icons.RefreshCcw, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: classes.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.projects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, sharedPortfolio.length > 0 ? sharedPortfolio.map(value => {\n    return __jsx(PortfolioCard, {\n      name: value.senderName,\n      address: value.senderDid,\n      email: value.senderEmail,\n      onClickCard: () => {\n        onClickCard(value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    });\n  }) : // <Text>No shared portfolios</Text>\n  __jsx(\"div\", {\n    style: {\n      background: '#fff',\n      padding: '24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, __jsx(Image, {\n    src: \"/assets/portfolioNotFound.svg\",\n    alt: \"No Shared Portfolios\",\n    width: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }))), __jsx(\"div\", {\n    className: classes.activity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    h2: true,\n    className: classes.inviteHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, \"Request User Portfolio\"), __jsx(\"div\", {\n    className: classes.invite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    type: \"email\",\n    placeholder: \"Search user by Email\",\n    value: searchUser,\n    onChange: e => setSearchUser(e.target.value),\n    style: {\n      width: '230px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    size: \"small\",\n    auto: true,\n    icon: __jsx(Icons.Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }),\n    type: \"secondary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }, \"Search\")), __jsx(Text, {\n    h2: true,\n    className: classes.activityTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, \"Recent Activities\"), requested.length > 0 ? requested.map(value => {\n    return __jsx(EventListItem, {\n      username: \"ofekashery\",\n      avatar: \"/assets/avatar.png\",\n      created: \"3d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, \"Requested \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 33\n      }\n    }, value.name, \"'s\"), \" Portfolio access.\");\n  }) : __jsx(Text, {\n    className: classes.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, \"No activity\"), __jsx(Text, {\n    className: classes.viewAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    color: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }, \"View more\")), __jsx(Text, {\n    h2: true,\n    className: classes.activityTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 15\n    }\n  }, \"All Requests\"), requests.length > 0 ? requests.map(value => {\n    return __jsx(EventListItem, {\n      username: \"ofekashery\",\n      avatar: \"/assets/avatar.png\",\n      created: \"3d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 23\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 25\n      }\n    }, value.name), \" requested portfolio access.\"), __jsx(\"div\", {\n      className: classes.btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }\n    }, __jsx(Button, {\n      size: \"small\",\n      auto: true,\n      type: \"success\",\n      onClick: () => handleAccept(value),\n      className: classes.btnAccept,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 25\n      }\n    }, \"Accept\"), __jsx(Button, {\n      size: \"small\",\n      auto: true,\n      onClick: () => handleReject(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }\n    }, \"Reject\")));\n  }) : __jsx(Text, {\n    className: classes.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, \"No activity\"))))));\n};\n\nexport default Content;","map":{"version":3,"sources":["D:/identity-managment/components/Content.js"],"names":["React","useState","useEffect","Text","Link","Button","Select","Spinner","Row","Input","Image","useToasts","useModal","makeStyles","EventListItem","SearchResultsModal","PortfolioCard","Portfolio","Loader","getLoginUser","getAllUsers","requestPortfolio","sharePortfolio","checkEmailExists","rejectPortfolioRequest","Icons","useStyles","ui","root","backgroundColor","background","content","width","layout","pageWidthWithMargin","maxWidth","boxSizing","margin","padding","gap","pageMargin","transform","invite","display","inviteHeading","marginBottom","fontSize","row","flexDirection","position","minWidth","flex","justifyContent","alignItems","projects","textRoot","borderBottom","palette","accents_2","message","activity","flexWrap","marginRight","activityTitle","marginTop","textAlign","viewAll","fontWeight","btnAccept","Content","idx","user","userData","caller","setCaller","userArray","setUserArray","requested","setRequested","requests","setRequests","sharedPortfolio","setSharedPortfolio","selectedPortfolio","setSelectedPortfolio","portfolioModal","setPortfolioModal","loading","setLoading","loaderData","setLoaderData","searchUser","setSearchUser","userEmail","setUserEmail","reciverDetails","setReciverDetails","searchResults","setSearchResults","setToast","console","log","load","sharedData","JSON","parse","localStorage","getItem","did","onClickCard","portfolio","handleClick","heading","email","status","name","text","type","fetchUserDetails","id","handleAccept","receiver","docId","dec","ceramic","decryptDagJWE","aesKey","encKey","createDagJWE","senderDid","requestId","handleReject","classes","length","map","value","senderName","senderEmail","e","target","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  Text,\r\n  Link,\r\n  Button,\r\n  Select,\r\n  Spinner,\r\n  Row,\r\n  Input,\r\n  Image,\r\n  useToasts,\r\n  useModal,\r\n} from '@geist-ui/react';\r\n\r\nimport makeStyles from './makeStyles';\r\nimport EventListItem from './EventListItem.js';\r\nimport SearchResultsModal from './modals/SearchResults';\r\nimport PortfolioCard from './PortfolioCard';\r\nimport Portfolio from './modals/Portfolio';\r\nimport Loader from './modals/Loader';\r\nimport {\r\n  getLoginUser,\r\n  getAllUsers,\r\n  requestPortfolio,\r\n  sharePortfolio,\r\n  checkEmailExists, rejectPortfolioRequest,\r\n} from '../lib/threadDb';\r\nimport * as Icons from 'react-feather';\r\n\r\nconst useStyles = makeStyles((ui) => ({\r\n  root: {\r\n    backgroundColor: ui.background,\r\n  },\r\n  content: {\r\n    width: ui.layout.pageWidthWithMargin,\r\n    maxWidth: '100%',\r\n    boxSizing: 'border-box',\r\n    margin: '0 auto',\r\n    padding: `calc(${ui.layout.gap} * 2) ${ui.layout.pageMargin} calc(${ui.layout.gap} * 4)`,\r\n    transform: 'translateY(-35px)',\r\n  },\r\n  invite: {\r\n    display: 'flex',\r\n  },\r\n  inviteHeading: {\r\n    marginBottom: 18,\r\n    fontSize: '14px !important',\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'relative',\r\n    minWidth: 1,\r\n    maxWidth: '100%',\r\n    flex: 1,\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'stretch',\r\n  },\r\n  projects: {\r\n    width: '100%',\r\n  },\r\n  textRoot: {\r\n    borderBottom: `solid 1px ${ui.palette.accents_2}`,\r\n    padding: '10px 0px',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    fontSize: 14,\r\n  },\r\n  message: {\r\n    fontSize: '14px !important',\r\n    margin: 0,\r\n    flex: 1,\r\n  },\r\n  activity: {\r\n    flex: 1,\r\n  },\r\n  [`@media screen and (min-width: ${ui.layout.pageWidthWithMargin})`]: {\r\n    row: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n    },\r\n    projects: {\r\n      width: 540,\r\n      maxWidth: '100%',\r\n      marginRight: 80,\r\n    },\r\n    activityTitle: {\r\n      marginTop: '20 !important',\r\n\r\n      fontSize: '14px !important',\r\n      textAlign: 'start !important',\r\n    },\r\n    viewAll: {\r\n      marginBottom: '0 !important',\r\n      textAlign: 'start !important',\r\n    },\r\n    invite: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  },\r\n  viewAll: {\r\n    fontSize: 14,\r\n    fontWeight: 700,\r\n    marginBottom: ui.layout.gap,\r\n    textAlign: 'center',\r\n  },\r\n  activityTitle: {\r\n    fontWeight: 700,\r\n    marginTop: ui.layout.gap,\r\n    fontSize: 24,\r\n    textAlign: 'center',\r\n  },\r\n\r\n  btnAccept: {\r\n    marginRight: '8px',\r\n  },\r\n}));\r\n\r\nconst Content = ({ idx, user, userData }) => {\r\n  const [caller, setCaller] = useState(null);\r\n  const [userArray, setUserArray] = useState([{}]);\r\n\r\n  const [requested, setRequested] = useState([]);\r\n  const [requests, setRequests] = useState([]);\r\n  const [sharedPortfolio, setSharedPortfolio] = useState([]);\r\n  const [selectedPortfolio, setSelectedPortfolio] = useState({});\r\n  const [portfolioModal, setPortfolioModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loaderData, setLoaderData] = useState({});\r\n  const [searchUser, setSearchUser] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [reciverDetails, setReciverDetails] = useState(null);\r\n\r\n  const [searchResults, setSearchResults] = useState(false);\r\n  const [, setToast] = useToasts();\r\n\r\n  console.log('SEARCHRESULTS', searchResults);\r\n  useEffect(() => {\r\n    async function load() {\r\n      if (idx && user === 2) {\r\n        setRequested(userData.requested);\r\n        setRequests(userData.requests);\r\n        setSharedPortfolio(userData.sharedData);\r\n\r\n        const user = JSON.parse(localStorage.getItem('USER'));\r\n        const { userArray, caller } = await getAllUsers(user.did);\r\n        console.log('caller', caller);\r\n        setCaller(userData);\r\n        setUserArray(userArray);\r\n      }\r\n    }\r\n    load();\r\n  }, [idx, user]);\r\n\r\n  const onClickCard = (portfolio) => {\r\n    console.log(portfolio);\r\n    setSelectedPortfolio(portfolio);\r\n    setPortfolioModal(true);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    setLoaderData({\r\n      heading: 'Searching User',\r\n      content: 'Searching user',\r\n    });\r\n    setLoading(true);\r\n\r\n    if (searchUser !== caller.email) {\r\n      const {status, user} = await checkEmailExists(searchUser);\r\n      if (!status) {\r\n        setLoading(false);\r\n        setSearchResults(true);\r\n\r\n        setUserEmail(user.name);\r\n        setReciverDetails(user);\r\n        console.log('User EMAILLLLL', userEmail);\r\n      } else {\r\n        setLoading(false);\r\n        setToast({\r\n          text: 'User not found, please check the Email ID',\r\n          type: 'warning',\r\n        });\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      setToast({\r\n        text: 'Please enter valid email',\r\n        type: 'warning',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchUserDetails = async () => {\r\n    setLoaderData({\r\n      heading: 'Fetch portfolio',\r\n      content: 'Fetching portfolio',\r\n    });\r\n    setLoading(true);\r\n    const userData = await getLoginUser(idx.id);\r\n    setRequested(userData.requested);\r\n    setRequests(userData.requests);\r\n    setSharedPortfolio(userData.sharedData);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleAccept = async (receiver) => {\r\n    setLoading(true);\r\n    setLoaderData({\r\n      heading: 'Accept Portfolio Request',\r\n      content: 'Accepting portfolio request',\r\n    });\r\n    const docId = localStorage.getItem('docId');\r\n    const user = JSON.parse(localStorage.getItem('USER'));\r\n    const dec = await idx.ceramic.did.decryptDagJWE(user.aesKey);\r\n    const encKey = await idx.ceramic.did.createDagJWE(dec, [\r\n      receiver.senderDid,\r\n    ]);\r\n    await sharePortfolio(caller, receiver, docId, encKey, receiver.requestId);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleReject = async (receiver) => {\r\n    setLoading(true)\r\n    setLoaderData({heading: \"Reject Portfolio Request\", content: \"Rejecting portfolio request\"})\r\n    await rejectPortfolioRequest(caller, receiver.requestId)\r\n    setLoading(false)\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Loader\r\n        loading={loading}\r\n        heading={loaderData.heading}\r\n        content={loaderData.content}\r\n      />\r\n      <SearchResultsModal\r\n        avatar='/assets/avatar.png'\r\n        searchResults={searchResults}\r\n        setSearchResults={setSearchResults}\r\n        userEmail={userEmail}\r\n        reciverDetails={reciverDetails}\r\n        caller={caller}\r\n        requested={requested}\r\n      />\r\n      {/* <TestModal searchResults={searchResults} /> */}\r\n      <Portfolio\r\n        state={portfolioModal}\r\n        idx={idx}\r\n        portfolio={selectedPortfolio}\r\n        setPortfolioModal={setPortfolioModal}\r\n      />\r\n      <div className={classes.root}>\r\n        <div className={classes.content}>\r\n          <Row>\r\n            <Text h3>All portfolios</Text>\r\n            <Button\r\n              // aria-label='Toggle Dark mode'\r\n              // className={classes.themeIcon}\r\n              auto\r\n              type='abort'\r\n              onClick={fetchUserDetails}\r\n            >\r\n              <Icons.RefreshCcw size={16} />\r\n            </Button>\r\n          </Row>\r\n          <div className={classes.row}>\r\n            <div className={classes.projects}>\r\n              {sharedPortfolio.length > 0 ? (\r\n                sharedPortfolio.map((value) => {\r\n                  return (\r\n                    <PortfolioCard\r\n                      name={value.senderName}\r\n                      address={value.senderDid}\r\n                      email={value.senderEmail}\r\n                      onClickCard={() => {\r\n                        onClickCard(value);\r\n                      }}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                // <Text>No shared portfolios</Text>\r\n                <div style={{ background: '#fff', padding: '24px' }}>\r\n                  <Image\r\n                    src='/assets/portfolioNotFound.svg'\r\n                    alt='No Shared Portfolios'\r\n                    width={350}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* right- */}\r\n\r\n            <div className={classes.activity}>\r\n              <Text h2 className={classes.inviteHeading}>\r\n                Request User Portfolio\r\n              </Text>\r\n              <div className={classes.invite}>\r\n                <Input\r\n                  type='email'\r\n                  placeholder='Search user by Email'\r\n                  value={searchUser}\r\n                  onChange={(e) => setSearchUser(e.target.value)}\r\n                  style={{ width: '230px' }}\r\n                />\r\n                <Button\r\n                  size='small'\r\n                  auto\r\n                  icon={<Icons.Search />}\r\n                  type='secondary'\r\n                  onClick={handleClick}\r\n                >\r\n                  Search\r\n                </Button>\r\n              </div>\r\n\r\n              <Text h2 className={classes.activityTitle}>\r\n                Recent Activities\r\n              </Text>\r\n\r\n              {requested.length > 0 ? (\r\n                requested.map((value) => {\r\n                  return (\r\n                    <EventListItem\r\n                      username='ofekashery'\r\n                      avatar='/assets/avatar.png'\r\n                      created='3d'\r\n                    >\r\n                      Requested <b>{value.name}'s</b> Portfolio access.\r\n                    </EventListItem>\r\n                  );\r\n                })\r\n              ) : (\r\n                <Text className={classes.message}>No activity</Text>\r\n              )}\r\n              <Text className={classes.viewAll}>\r\n                <Link color>View more</Link>\r\n              </Text>\r\n\r\n              <Text h2 className={classes.activityTitle}>\r\n                All Requests\r\n              </Text>\r\n\r\n              {requests.length > 0 ? (\r\n                requests.map((value) => {\r\n                  return (\r\n                    <EventListItem\r\n                      username='ofekashery'\r\n                      avatar='/assets/avatar.png'\r\n                      created='3d'\r\n                    >\r\n                      <p>\r\n                        <b>{value.name}</b> requested portfolio access.\r\n                      </p>\r\n                      <div className={classes.btn}>\r\n                        <Button\r\n                          size='small'\r\n                          auto\r\n                          type='success'\r\n                          onClick={() => handleAccept(value)}\r\n                          className={classes.btnAccept}\r\n                        >\r\n                          Accept\r\n                        </Button>\r\n                        <Button\r\n                          size='small'\r\n                          auto\r\n                          onClick={() => handleReject(value)}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </div>\r\n                    </EventListItem>\r\n                  );\r\n                })\r\n              ) : (\r\n                <Text className={classes.message}>No activity</Text>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}