{"ast":null,"code":"var _jsxFileName = \"D:\\\\identity-managment\\\\components\\\\modals\\\\Portfolio.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, Card, Modal, Row, Snippet, Spinner, Tag, Text } from '@geist-ui/react';\nimport * as Icons from 'react-feather';\nimport makeStyles from '../makeStyles';\nimport { decryptData } from '../../lib/threadDb';\nconst useStyles = makeStyles(ui => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: ui.layout.pageWidthWithMargin,\n    maxWidth: '100%',\n    padding: `calc(${ui.layout.gap} * 2) `,\n    boxSizing: 'border-box',\n    margin: '0 auto'\n  },\n  avatar: {\n    width: '100px !important',\n    height: '100px !important',\n    marginRight: '30px !important'\n  },\n  logo: {\n    width: '32px !important',\n    height: '32px !important',\n    marginRight: '10px !important'\n  },\n  name: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    flex: 1,\n    height: 'fit-content !important'\n  },\n  title: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  username: {\n    lineHeight: 1,\n    height: 'fit-content !important'\n  },\n  integrationsTitle: {\n    textTransform: 'uppercase',\n    color: `${ui.palette.accents_5} !important`,\n    fontWeight: 500,\n    fontSize: 12,\n    margin: 0\n  },\n  integrationsUsername: {\n    margin: '0 0 0 4px',\n    fontWeight: 0\n  },\n  crypto: {\n    width: '50px !important',\n    height: '50px !important',\n    marginRight: '25px !important'\n  },\n  card: {\n    padding: '0 !important',\n    marginBottom: `calc(${ui.layout.gap}*1.5) !important`,\n    width: 'auto !important'\n  },\n  dot: {\n    display: 'flex !important',\n    marginTop: ui.layout.gapQuarter,\n    overflow: 'hidden',\n    alignItems: 'center !important',\n    '& .icon': {\n      backgroundColor: '#50e3c2 !important'\n    },\n    '& .label': {\n      textTransform: 'none !important',\n      display: 'flex',\n      flex: 1,\n      overflow: 'hidden'\n    },\n    '& .label a': {\n      display: 'inline-block',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      fontSize: 14,\n      lineHeight: 'normal'\n    },\n    '& .link': {\n      fontWeight: 500\n    }\n  },\n  tag: {\n    display: 'flex !important',\n    alignItems: 'center',\n    textTransform: 'capitalize !important',\n    fontSize: '12px !important',\n    padding: '3px 7px !important',\n    borderRadius: '16px !important',\n    height: 'unset !important',\n    marginLeft: 8,\n    color: `${ui.palette.foreground} !important`\n  },\n  projects: {\n    // width: '1040px !important',\n    width: '80%',\n    maxWidth: '100%'\n  },\n  modalContent: {\n    border: '1px solid #EAEAEA',\n    padding: '0 30px 0 30px',\n    borderRadius: 5\n  }\n}));\n\nfunction Portfolio({\n  state,\n  idx,\n  portfolio,\n  user,\n  setPortfolioModal\n}) {\n  const {\n    0: portfolioData,\n    1: setPortfolioData\n  } = useState({});\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    async function loadPortfolio() {\n      if (idx && portfolio.documentId) {\n        console.log(idx);\n        const aesKey = await idx.ceramic.did.decryptDagJWE(portfolio.encryptedKey);\n        const encData = await idx.ceramic.loadDocument(portfolio.documentId);\n        const decryptedData = await decryptData(Buffer.from(encData.content.portfolio, 'hex'), aesKey);\n        const res = JSON.parse(decryptedData.toString('utf8'));\n        setPortfolioData({\n          name: portfolio.senderName,\n          email: portfolio.senderEmail,\n          did: portfolio.senderDid,\n          portfolio: res\n        });\n        setLoading(false);\n      }\n\n      setModal(state);\n    }\n\n    loadPortfolio();\n  }, [state, idx, portfolio]);\n\n  const closeHandler = event => {\n    setModal(false);\n    setPortfolioModal(false);\n  };\n\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    width: '55%',\n    height: 'auto',\n    open: modal,\n    onClose: closeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"User portfolio \"), __jsx(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.modalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, loading ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    gap: 0.8,\n    justify: \"center\",\n    style: {\n      marginBottom: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, __jsx(Spinner, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  })), __jsx(Row, {\n    gap: 0.8,\n    justify: \"center\",\n    style: {\n      marginBottom: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, \"Loading portfolios\"))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, __jsx(Avatar, {\n    alt: \"Your Avatar\",\n    className: classes.avatar,\n    src: \"/assets/avatar.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: classes.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    h2: true,\n    className: classes.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, portfolioData.name)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 23\n    }\n  }, __jsx(Icons.Mail, {\n    size: 16,\n    \"aria-label\": \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }), __jsx(Text, {\n    className: classes.integrationsUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, portfolioData.email))))), portfolioData.portfolio.map(portfolio => {\n    return __jsx(\"div\", {\n      className: classes.projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, __jsx(Card, {\n      shadow: true,\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: classes.dot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 27\n      }\n    }, __jsx(\"img\", {\n      className: classes.logo,\n      src: `/assets/${portfolio.chain}.svg`,\n      alt: \"\",\n      srcset: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }), __jsx(Snippet, {\n      text: portfolio.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }), __jsx(Tag, {\n      style: {\n        marginLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, portfolio.chain)))));\n  })))), __jsx(Modal.Action, {\n    passive: true,\n    onClick: () => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["D:/identity-managment/components/modals/Portfolio.js"],"names":["React","useEffect","useState","Avatar","Card","Modal","Row","Snippet","Spinner","Tag","Text","Icons","makeStyles","decryptData","useStyles","ui","content","display","flexDirection","width","layout","pageWidthWithMargin","maxWidth","padding","gap","boxSizing","margin","avatar","height","marginRight","logo","name","justifyContent","flex","title","username","lineHeight","integrationsTitle","textTransform","color","palette","accents_5","fontWeight","fontSize","integrationsUsername","crypto","card","marginBottom","dot","marginTop","gapQuarter","overflow","alignItems","backgroundColor","whiteSpace","textOverflow","tag","borderRadius","marginLeft","foreground","projects","modalContent","border","Portfolio","state","idx","portfolio","user","setPortfolioModal","portfolioData","setPortfolioData","modal","setModal","loading","setLoading","loadPortfolio","documentId","console","log","aesKey","ceramic","did","decryptDagJWE","encryptedKey","encData","loadDocument","decryptedData","Buffer","from","res","JSON","parse","toString","senderName","email","senderEmail","senderDid","closeHandler","event","classes","map","chain","address"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,GAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,GAPF,EAQEC,IARF,QASO,iBATP;AAUA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,EAAD,KAAS;AACpCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,KAAK,EAAEJ,EAAE,CAACK,MAAH,CAAUC,mBAHV;AAIPC,IAAAA,QAAQ,EAAE,MAJH;AAKPC,IAAAA,OAAO,EAAG,QAAOR,EAAE,CAACK,MAAH,CAAUI,GAAI,QALxB;AAMPC,IAAAA,SAAS,EAAE,YANJ;AAOPC,IAAAA,MAAM,EAAE;AAPD,GAD2B;AAUpCC,EAAAA,MAAM,EAAE;AACNR,IAAAA,KAAK,EAAE,kBADD;AAENS,IAAAA,MAAM,EAAE,kBAFF;AAGNC,IAAAA,WAAW,EAAE;AAHP,GAV4B;AAepCC,EAAAA,IAAI,EAAE;AACJX,IAAAA,KAAK,EAAE,iBADH;AAEJS,IAAAA,MAAM,EAAE,iBAFJ;AAGJC,IAAAA,WAAW,EAAE;AAHT,GAf8B;AAoBpCE,EAAAA,IAAI,EAAE;AACJd,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJc,IAAAA,cAAc,EAAE,eAHZ;AAIJC,IAAAA,IAAI,EAAE,CAJF;AAKJL,IAAAA,MAAM,EAAE;AALJ,GApB8B;AA2BpCM,EAAAA,KAAK,EAAE;AACLjB,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,aAAa,EAAE,KAFV;AAGLc,IAAAA,cAAc,EAAE;AAHX,GA3B6B;AAgCpCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CADJ;AAERR,IAAAA,MAAM,EAAE;AAFA,GAhC0B;AAoCpCS,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,aAAa,EAAE,WADE;AAEjBC,IAAAA,KAAK,EAAG,GAAExB,EAAE,CAACyB,OAAH,CAAWC,SAAU,aAFd;AAGjBC,IAAAA,UAAU,EAAE,GAHK;AAIjBC,IAAAA,QAAQ,EAAE,EAJO;AAKjBjB,IAAAA,MAAM,EAAE;AALS,GApCiB;AA2CpCkB,EAAAA,oBAAoB,EAAE;AACpBlB,IAAAA,MAAM,EAAE,WADY;AAEpBgB,IAAAA,UAAU,EAAE;AAFQ,GA3Cc;AA+CpCG,EAAAA,MAAM,EAAE;AACN1B,IAAAA,KAAK,EAAE,iBADD;AAENS,IAAAA,MAAM,EAAE,iBAFF;AAGNC,IAAAA,WAAW,EAAE;AAHP,GA/C4B;AAoDpCiB,EAAAA,IAAI,EAAE;AACJvB,IAAAA,OAAO,EAAE,cADL;AAEJwB,IAAAA,YAAY,EAAG,QAAOhC,EAAE,CAACK,MAAH,CAAUI,GAAI,kBAFhC;AAGJL,IAAAA,KAAK,EAAE;AAHH,GApD8B;AAyDpC6B,EAAAA,GAAG,EAAE;AACH/B,IAAAA,OAAO,EAAE,iBADN;AAEHgC,IAAAA,SAAS,EAAElC,EAAE,CAACK,MAAH,CAAU8B,UAFlB;AAGHC,IAAAA,QAAQ,EAAE,QAHP;AAIHC,IAAAA,UAAU,EAAE,mBAJT;AAKH,eAAW;AACTC,MAAAA,eAAe,EAAE;AADR,KALR;AAQH,gBAAY;AACVf,MAAAA,aAAa,EAAE,iBADL;AAEVrB,MAAAA,OAAO,EAAE,MAFC;AAGVgB,MAAAA,IAAI,EAAE,CAHI;AAIVkB,MAAAA,QAAQ,EAAE;AAJA,KART;AAcH,kBAAc;AACZlC,MAAAA,OAAO,EAAE,cADG;AAEZkC,MAAAA,QAAQ,EAAE,QAFE;AAGZG,MAAAA,UAAU,EAAE,QAHA;AAIZC,MAAAA,YAAY,EAAE,UAJF;AAKZZ,MAAAA,QAAQ,EAAE,EALE;AAMZP,MAAAA,UAAU,EAAE;AANA,KAdX;AAsBH,eAAW;AACTM,MAAAA,UAAU,EAAE;AADH;AAtBR,GAzD+B;AAmFpCc,EAAAA,GAAG,EAAE;AACHvC,IAAAA,OAAO,EAAE,iBADN;AAEHmC,IAAAA,UAAU,EAAE,QAFT;AAGHd,IAAAA,aAAa,EAAE,uBAHZ;AAIHK,IAAAA,QAAQ,EAAE,iBAJP;AAKHpB,IAAAA,OAAO,EAAE,oBALN;AAMHkC,IAAAA,YAAY,EAAE,iBANX;AAOH7B,IAAAA,MAAM,EAAE,kBAPL;AAQH8B,IAAAA,UAAU,EAAE,CART;AASHnB,IAAAA,KAAK,EAAG,GAAExB,EAAE,CAACyB,OAAH,CAAWmB,UAAW;AAT7B,GAnF+B;AA+FpCC,EAAAA,QAAQ,EAAE;AACR;AACAzC,IAAAA,KAAK,EAAE,KAFC;AAGRG,IAAAA,QAAQ,EAAE;AAHF,GA/F0B;AAoGpCuC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE,mBADI;AAEZvC,IAAAA,OAAO,EAAE,eAFG;AAGZkC,IAAAA,YAAY,EAAE;AAHF;AApGsB,CAAT,CAAD,CAA5B;;AA2GA,SAASM,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,GAAT;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA,IAAzB;AAA+BC,EAAAA;AAA/B,CAAnB,EAAuE;AACrE,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCpE,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAACqE,KAAD;AAAA,OAAQC;AAAR,MAAoBtE,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACuE,OAAD;AAAA,OAAUC;AAAV,MAAwBxE,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe0E,aAAf,GAA+B;AAC7B,UAAIV,GAAG,IAAIC,SAAS,CAACU,UAArB,EAAiC;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;AACA,cAAMc,MAAM,GAAG,MAAMd,GAAG,CAACe,OAAJ,CAAYC,GAAZ,CAAgBC,aAAhB,CACnBhB,SAAS,CAACiB,YADS,CAArB;AAGA,cAAMC,OAAO,GAAG,MAAMnB,GAAG,CAACe,OAAJ,CAAYK,YAAZ,CAAyBnB,SAAS,CAACU,UAAnC,CAAtB;AACA,cAAMU,aAAa,GAAG,MAAMzE,WAAW,CACrC0E,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACpE,OAAR,CAAgBkD,SAA5B,EAAuC,KAAvC,CADqC,EAErCa,MAFqC,CAAvC;AAIA,cAAMU,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,aAAa,CAACM,QAAd,CAAuB,MAAvB,CAAX,CAAZ;AACAtB,QAAAA,gBAAgB,CAAC;AACfvC,UAAAA,IAAI,EAAEmC,SAAS,CAAC2B,UADD;AAEfC,UAAAA,KAAK,EAAE5B,SAAS,CAAC6B,WAFF;AAGfd,UAAAA,GAAG,EAAEf,SAAS,CAAC8B,SAHA;AAIf9B,UAAAA,SAAS,EAAEuB;AAJI,SAAD,CAAhB;AAMAf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDF,MAAAA,QAAQ,CAACR,KAAD,CAAR;AACD;;AACDW,IAAAA,aAAa;AACd,GAxBQ,EAwBN,CAACX,KAAD,EAAQC,GAAR,EAAaC,SAAb,CAxBM,CAAT;;AA0BA,QAAM+B,YAAY,GAAIC,KAAD,IAAW;AAC9B1B,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAHD;;AAIA,QAAM+B,OAAO,GAAGrF,SAAS,EAAzB;AAEA,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,KAAd;AAAqB,IAAA,MAAM,EAAE,MAA7B;AAAqC,IAAA,IAAI,EAAEyD,KAA3C;AAAkD,IAAA,OAAO,EAAE0B,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACtC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,OAAO,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,GAAG,EAAE,GADP;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,KAAK,EAAE;AAAE1B,MAAAA,YAAY,EAAE;AAAhB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAQE,MAAC,GAAD;AACE,IAAA,GAAG,EAAE,GADP;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA,YAAY,EAAE;AAAhB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,CARF,CADM,GAkBN,4BACE;AAAK,IAAA,SAAS,EAAEoD,OAAO,CAACnF,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,GAAG,EAAC,aADN;AAEE,IAAA,SAAS,EAAEmF,OAAO,CAACxE,MAFrB;AAGE,IAAA,GAAG,EAAC,oBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAK,IAAA,SAAS,EAAEwE,OAAO,CAACpE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEoE,OAAO,CAACjE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,MAAR;AAAS,IAAA,SAAS,EAAEiE,OAAO,CAAChE,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkC,aAAa,CAACtC,IADjB,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEd,MAAAA,OAAO,EAAE,MAAX;AAAmBmC,MAAAA,UAAU,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,IAAP;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAsB,kBAAW,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAE+C,OAAO,CAACvD,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGyB,aAAa,CAACyB,KADjB,CAFF,CADF,CANF,CANF,CADF,EAuBGzB,aAAa,CAACH,SAAd,CAAwBkC,GAAxB,CAA6BlC,SAAD,IAAe;AAC1C,WACE;AAAK,MAAA,SAAS,EAAEiC,OAAO,CAACvC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAa,MAAA,SAAS,EAAEuC,OAAO,CAACrD,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEqD,OAAO,CAACnD,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAEmD,OAAO,CAACrE,IADrB;AAEE,MAAA,GAAG,EAAG,WAAUoC,SAAS,CAACmC,KAAM,MAFlC;AAGE,MAAA,GAAG,EAAC,EAHN;AAIE,MAAA,MAAM,EAAC,EAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,MAAC,OAAD;AAAS,MAAA,IAAI,EAAEnC,SAAS,CAACoC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAE5C,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,SAAS,CAACmC,KADb,CARF,CADF,CADF,CADF,CADF;AAoBD,GArBA,CAvBH,CAnBJ,CADF,CAHF,EAwEE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,OAAO,MAArB;AAAsB,IAAA,OAAO,EAAE,MAAM7B,QAAQ,CAAC,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxEF,CADF,CADF;AAgFD;;AAED,eAAeT,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  Modal,\r\n  Row,\r\n  Snippet,\r\n  Spinner,\r\n  Tag,\r\n  Text,\r\n} from '@geist-ui/react';\r\nimport * as Icons from 'react-feather';\r\nimport makeStyles from '../makeStyles';\r\n\r\nimport { decryptData } from '../../lib/threadDb';\r\n\r\nconst useStyles = makeStyles((ui) => ({\r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: ui.layout.pageWidthWithMargin,\r\n    maxWidth: '100%',\r\n    padding: `calc(${ui.layout.gap} * 2) `,\r\n    boxSizing: 'border-box',\r\n    margin: '0 auto',\r\n  },\r\n  avatar: {\r\n    width: '100px !important',\r\n    height: '100px !important',\r\n    marginRight: '30px !important',\r\n  },\r\n  logo: {\r\n    width: '32px !important',\r\n    height: '32px !important',\r\n    marginRight: '10px !important',\r\n  },\r\n  name: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    flex: 1,\r\n    height: 'fit-content !important',\r\n  },\r\n  title: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  username: {\r\n    lineHeight: 1,\r\n    height: 'fit-content !important',\r\n  },\r\n  integrationsTitle: {\r\n    textTransform: 'uppercase',\r\n    color: `${ui.palette.accents_5} !important`,\r\n    fontWeight: 500,\r\n    fontSize: 12,\r\n    margin: 0,\r\n  },\r\n  integrationsUsername: {\r\n    margin: '0 0 0 4px',\r\n    fontWeight: 0,\r\n  },\r\n  crypto: {\r\n    width: '50px !important',\r\n    height: '50px !important',\r\n    marginRight: '25px !important',\r\n  },\r\n  card: {\r\n    padding: '0 !important',\r\n    marginBottom: `calc(${ui.layout.gap}*1.5) !important`,\r\n    width: 'auto !important',\r\n  },\r\n  dot: {\r\n    display: 'flex !important',\r\n    marginTop: ui.layout.gapQuarter,\r\n    overflow: 'hidden',\r\n    alignItems: 'center !important',\r\n    '& .icon': {\r\n      backgroundColor: '#50e3c2 !important',\r\n    },\r\n    '& .label': {\r\n      textTransform: 'none !important',\r\n      display: 'flex',\r\n      flex: 1,\r\n      overflow: 'hidden',\r\n    },\r\n    '& .label a': {\r\n      display: 'inline-block',\r\n      overflow: 'hidden',\r\n      whiteSpace: 'nowrap',\r\n      textOverflow: 'ellipsis',\r\n      fontSize: 14,\r\n      lineHeight: 'normal',\r\n    },\r\n    '& .link': {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n  tag: {\r\n    display: 'flex !important',\r\n    alignItems: 'center',\r\n    textTransform: 'capitalize !important',\r\n    fontSize: '12px !important',\r\n    padding: '3px 7px !important',\r\n    borderRadius: '16px !important',\r\n    height: 'unset !important',\r\n    marginLeft: 8,\r\n    color: `${ui.palette.foreground} !important`,\r\n  },\r\n\r\n  projects: {\r\n    // width: '1040px !important',\r\n    width: '80%',\r\n    maxWidth: '100%',\r\n  },\r\n  modalContent: {\r\n    border: '1px solid #EAEAEA',\r\n    padding: '0 30px 0 30px',\r\n    borderRadius: 5,\r\n  },\r\n}));\r\n\r\nfunction Portfolio({ state, idx, portfolio, user, setPortfolioModal }) {\r\n  const [portfolioData, setPortfolioData] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadPortfolio() {\r\n      if (idx && portfolio.documentId) {\r\n        console.log(idx);\r\n        const aesKey = await idx.ceramic.did.decryptDagJWE(\r\n          portfolio.encryptedKey\r\n        );\r\n        const encData = await idx.ceramic.loadDocument(portfolio.documentId);\r\n        const decryptedData = await decryptData(\r\n          Buffer.from(encData.content.portfolio, 'hex'),\r\n          aesKey\r\n        );\r\n        const res = JSON.parse(decryptedData.toString('utf8'));\r\n        setPortfolioData({\r\n          name: portfolio.senderName,\r\n          email: portfolio.senderEmail,\r\n          did: portfolio.senderDid,\r\n          portfolio: res,\r\n        });\r\n        setLoading(false);\r\n      }\r\n      setModal(state);\r\n    }\r\n    loadPortfolio();\r\n  }, [state, idx, portfolio]);\r\n\r\n  const closeHandler = (event) => {\r\n    setModal(false);\r\n    setPortfolioModal(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Modal width={'55%'} height={'auto'} open={modal} onClose={closeHandler}>\r\n        <Modal.Title>User portfolio </Modal.Title>\r\n\r\n        <Modal.Content>\r\n          <div className={classes.modalContent}>\r\n            {loading ? (\r\n              <div>\r\n                <Row\r\n                  gap={0.8}\r\n                  justify='center'\r\n                  style={{ marginBottom: '15px' }}\r\n                >\r\n                  <Spinner size='large' />\r\n                </Row>\r\n                <Row\r\n                  gap={0.8}\r\n                  justify='center'\r\n                  style={{ marginBottom: '15px' }}\r\n                >\r\n                  <Text>Loading portfolios</Text>\r\n                </Row>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className={classes.content}>\r\n                  <Avatar\r\n                    alt='Your Avatar'\r\n                    className={classes.avatar}\r\n                    src='/assets/avatar.png'\r\n                  />\r\n                  <div className={classes.name}>\r\n                    <div className={classes.title}>\r\n                      <Text h2 className={classes.username}>\r\n                        {portfolioData.name}\r\n                      </Text>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Icons.Mail size={16} aria-label='Email' />\r\n                        <Text className={classes.integrationsUsername}>\r\n                          {portfolioData.email}\r\n                        </Text>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {portfolioData.portfolio.map((portfolio) => {\r\n                  return (\r\n                    <div className={classes.projects}>\r\n                      <Card shadow className={classes.card}>\r\n                        <div>\r\n                          <div className={classes.dot}>\r\n                            <img\r\n                              className={classes.logo}\r\n                              src={`/assets/${portfolio.chain}.svg`}\r\n                              alt=''\r\n                              srcset=''\r\n                            />\r\n                            <Snippet text={portfolio.address} />\r\n                            <Tag style={{ marginLeft: '8px' }}>\r\n                              {portfolio.chain}\r\n                            </Tag>\r\n                          </div>\r\n                        </div>\r\n                      </Card>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Modal.Content>\r\n        <Modal.Action passive onClick={() => setModal(false)}>\r\n          Cancel\r\n        </Modal.Action>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n"]},"metadata":{},"sourceType":"module"}