{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"D:\\\\identity-managment\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { CssBaseline, GeistProvider } from '@geist-ui/react';\nimport { generateSignature } from '../lib/signerConnect';\nimport { generateIDX, generateIDXForMagic } from '../lib/identity';\nimport { definitions } from '../utils/config.json';\nimport { getLoginUser, loginUserWithChallenge } from '../lib/threadDb';\nimport { PrivateKey } from '@textile/hub';\nimport { GlobalStyle } from '../utils/Global';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState('light'),\n      themeType = _useState[0],\n      setThemeType = _useState[1];\n\n  var _useState2 = useState(null),\n      provider = _useState2[0],\n      setProvider = _useState2[1];\n\n  var toggleDarkMode = function toggleDarkMode() {\n    return setThemeType(themeType === 'dark' ? 'light' : 'dark');\n  };\n\n  return __jsx(GeistProvider, {\n    theme: {\n      type: themeType\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  })));\n}\n\n_s(MyApp, \"5jwi5K0XZ215AAxJviy9l9juGr8=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["D:/identity-managment/pages/_app.js"],"names":["React","useState","CssBaseline","GeistProvider","generateSignature","generateIDX","generateIDXForMagic","definitions","getLoginUser","loginUserWithChallenge","PrivateKey","GlobalStyle","MyApp","Component","pageProps","themeType","setThemeType","provider","setProvider","toggleDarkMode","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,iBAA3C;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,iBAAjD;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,YAAT,EAAuBC,sBAAvB,QAAqD,iBAArD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACLb,QAAQ,CAAC,OAAD,CADH;AAAA,MAChCc,SADgC;AAAA,MACrBC,YADqB;;AAAA,mBAEPf,QAAQ,CAAC,IAAD,CAFD;AAAA,MAEhCgB,QAFgC;AAAA,MAEtBC,WAFsB;;AAGvC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WACrBH,YAAY,CAACD,SAAS,KAAK,MAAd,GAAuB,OAAvB,GAAiC,MAAlC,CADS;AAAA,GAAvB;;AAGA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAEL;AAAR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHF,CADF;AAOD;;GAbQF,K;;KAAAA,K;AAeT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { CssBaseline, GeistProvider } from '@geist-ui/react';\r\nimport { generateSignature } from '../lib/signerConnect';\r\nimport { generateIDX, generateIDXForMagic } from '../lib/identity';\r\nimport { definitions } from '../utils/config.json';\r\nimport { getLoginUser, loginUserWithChallenge } from '../lib/threadDb';\r\nimport { PrivateKey } from '@textile/hub';\r\nimport { GlobalStyle } from '../utils/Global';\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const [themeType, setThemeType] = useState('light');\r\n  const [provider, setProvider] = useState(null);\r\n  const toggleDarkMode = () =>\r\n    setThemeType(themeType === 'dark' ? 'light' : 'dark');\r\n\r\n  return (\r\n    <GeistProvider theme={{ type: themeType }}>\r\n      {/* <GlobalStyle /> */}\r\n      <CssBaseline />\r\n      <Component {...pageProps} />\r\n    </GeistProvider>\r\n  );\r\n}\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}