{"ast":null,"code":"var _jsxFileName = \"D:\\\\identity-managment\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { CssBaseline, GeistProvider } from '@geist-ui/react';\nimport { generateSignature } from '../lib/signerConnect';\nimport { generateIDX, generateIDXForMagic } from '../lib/identity';\nimport { definitions } from '../utils/config.json';\nimport { getLoginUser, loginUserWithChallenge } from '../lib/threadDb';\nimport { PrivateKey } from '@textile/hub';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState('light'),\n      themeType = _useState[0],\n      setThemeType = _useState[1];\n\n  var _useState2 = useState(null),\n      provider = _useState2[0],\n      setProvider = _useState2[1];\n\n  var toggleDarkMode = function toggleDarkMode() {\n    return setThemeType(themeType === 'dark' ? 'light' : 'dark');\n  };\n\n  var _useState3 = useState(null),\n      idx = _useState3[0],\n      setIdx = _useState3[1];\n\n  var _useState4 = useState(null),\n      ceramic = _useState4[0],\n      setCeramic = _useState4[1];\n\n  var _useState5 = useState(),\n      injectedProvider = _useState5[0],\n      setInjectedProvider = _useState5[1];\n\n  var _useState6 = useState(0),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var _useState7 = useState([]),\n      userData = _useState7[0],\n      setUserData = _useState7[1];\n\n  var _useState8 = useState(null),\n      identity = _useState8[0],\n      setIdentity = _useState8[1];\n\n  return __jsx(GeistProvider, {\n    theme: {\n      type: themeType\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(Component, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(MyApp, \"Xkqmum9ryy+cxPtRWDS8QlSi0/Y=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["D:/identity-managment/pages/_app.js"],"names":["React","useState","CssBaseline","GeistProvider","generateSignature","generateIDX","generateIDXForMagic","definitions","getLoginUser","loginUserWithChallenge","PrivateKey","MyApp","Component","pageProps","themeType","setThemeType","provider","setProvider","toggleDarkMode","idx","setIdx","ceramic","setCeramic","injectedProvider","setInjectedProvider","user","setUser","userData","setUserData","identity","setIdentity","type"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,iBAA3C;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,iBAAjD;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,YAAT,EAAuBC,sBAAvB,QAAqD,iBAArD;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACLZ,QAAQ,CAAC,OAAD,CADH;AAAA,MAChCa,SADgC;AAAA,MACrBC,YADqB;;AAAA,mBAEPd,QAAQ,CAAC,IAAD,CAFD;AAAA,MAEhCe,QAFgC;AAAA,MAEtBC,WAFsB;;AAGvC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WACrBH,YAAY,CAACD,SAAS,KAAK,MAAd,GAAuB,OAAvB,GAAiC,MAAlC,CADS;AAAA,GAAvB;;AAHuC,mBAKjBb,QAAQ,CAAC,IAAD,CALS;AAAA,MAKhCkB,GALgC;AAAA,MAK3BC,MAL2B;;AAAA,mBAMTnB,QAAQ,CAAC,IAAD,CANC;AAAA,MAMhCoB,OANgC;AAAA,MAMvBC,UANuB;;AAAA,mBAOSrB,QAAQ,EAPjB;AAAA,MAOhCsB,gBAPgC;AAAA,MAOdC,mBAPc;;AAAA,mBAQfvB,QAAQ,CAAC,CAAD,CARO;AAAA,MAQhCwB,IARgC;AAAA,MAQ1BC,OAR0B;;AAAA,mBASPzB,QAAQ,CAAC,EAAD,CATD;AAAA,MAShC0B,QATgC;AAAA,MAStBC,WATsB;;AAAA,mBAUP3B,QAAQ,CAAC,IAAD,CAVD;AAAA,MAUhC4B,QAVgC;AAAA,MAUtBC,WAVsB;;AAYvC,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAEjB;AAAR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;GAlBQH,K;;KAAAA,K;AAoBT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { CssBaseline, GeistProvider } from '@geist-ui/react';\r\nimport { generateSignature } from '../lib/signerConnect';\r\nimport { generateIDX, generateIDXForMagic } from '../lib/identity';\r\nimport { definitions } from '../utils/config.json';\r\nimport { getLoginUser, loginUserWithChallenge } from '../lib/threadDb';\r\nimport { PrivateKey } from '@textile/hub';\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const [themeType, setThemeType] = useState('light');\r\n  const [provider, setProvider] = useState(null);\r\n  const toggleDarkMode = () =>\r\n    setThemeType(themeType === 'dark' ? 'light' : 'dark');\r\n  const [idx, setIdx] = useState(null);\r\n  const [ceramic, setCeramic] = useState(null);\r\n  const [injectedProvider, setInjectedProvider] = useState();\r\n  const [user, setUser] = useState(0);\r\n  const [userData, setUserData] = useState([]);\r\n  const [identity, setIdentity] = useState(null);\r\n\r\n  return (\r\n    <GeistProvider theme={{ type: themeType }}>\r\n      <CssBaseline />\r\n      <Component />\r\n    </GeistProvider>\r\n  );\r\n}\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}